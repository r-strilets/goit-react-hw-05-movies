{"version":3,"file":"static/js/850.a75150f9.chunk.js","mappings":"oOAAMA,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,OACE,+BACE,wBACGA,GACCA,EAAaC,KAAI,SAAAC,GAAM,OACrB,gBAAIC,UAAU,GAAd,WACE,gBACEC,IACEF,EAAOG,aAAP,0CACuCH,EAAOG,cAC1C,iGAENC,IAAKJ,EAAOK,KACZC,MAAM,KACNC,OAAO,QAET,wBAAKP,EAAOK,QACZ,uCAAeL,EAAOQ,eAZFR,EAAOS,QADR,OAmBhC,ECID,EAvBa,WACX,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOZ,EAAP,KAAqBa,EAArB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,IACbM,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GACJV,EAAgBU,EAAKC,KAAKC,KAC3B,IACAC,MAAMT,GACNU,SAAQ,kBAAMZ,GAAa,EAAnB,GACZ,GAAE,CAACG,KAEF,gCACGJ,GAAa,GACbE,GAAS,GACThB,IAAgB,SAACD,EAAD,CAAcC,aAAcA,MAGlD,C","sources":["components/MoveiCredits/MoveiCredits.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["const MoveiCredits = ({ movieCredits }) => {\n  return (\n    <>\n      <ul>\n        {movieCredits &&\n          movieCredits.map(credit => (\n            <li className=\"\" key={credit.cast_id}>\n              <img\n                src={\n                  credit.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${credit.profile_path}`\n                    : 'https://st2.depositphotos.com/1898481/6448/i/600/depositphotos_64486573-stock-photo-people.jpg'\n                }\n                alt={credit.name}\n                width=\"50\"\n                height=\"75\"\n              />\n              <h4>{credit.name}</h4>\n              <p>Character: {credit.character}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport { MoveiCredits };\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCredits } from 'utils/fetchApi/fetchApi';\nimport { MoveiCredits } from 'components/MoveiCredits/MoveiCredits';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState(null);\n  const [isloading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsloading(true);\n    fetchMovieCredits(movieId)\n      .then(resp => {\n        setMovieCredits(resp.data.cast);\n      })\n      .catch(setError)\n      .finally(() => setIsloading(false));\n  }, [movieId]);\n  return (\n    <>\n      {isloading && ''}\n      {error && ''}\n      {movieCredits && <MoveiCredits movieCredits={movieCredits} />}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["MoveiCredits","movieCredits","map","credit","className","src","profile_path","alt","name","width","height","character","cast_id","useState","setMovieCredits","isloading","setIsloading","error","setError","movieId","useParams","useEffect","fetchMovieCredits","then","resp","data","cast","catch","finally"],"sourceRoot":""}