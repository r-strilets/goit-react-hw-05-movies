{"version":3,"file":"static/js/667.a318c7e8.chunk.js","mappings":"qMAEMA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,GACCA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAoBC,EAAvB,EAAOC,eAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,SACGI,KAFID,EADA,OAUpB,C,uFCsBD,UApCmB,WACjB,OAAkCM,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,MAArC,eAAOV,EAAP,KAAee,EAAf,KAEA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAA0BC,EAAAA,EAAAA,IAAgB,CAAC,GAApCC,GAAP,eAkBA,OAXAC,EAAAA,EAAAA,YAAU,WACM,KAAVJ,IAGJG,EAAgB,CAAEH,MAAOA,KACzBK,EAAAA,EAAAA,IAAmBL,GAChBM,MAAK,SAAAC,GAAI,OAAIR,EAAUQ,EAAKC,KAAKC,QAAxB,IACTC,MAAMZ,GACNa,SAAQ,kBAAMf,GAAa,EAAnB,IAEZ,GAAE,CAACI,KAEF,iCACE,kBAAMY,OAAO,GAAGC,SAAU,SAAAC,GAAC,OAnBd,SAAAA,GACfA,EAAEC,iBACFd,EAASa,EAAEE,OAAOhB,MAAMiB,OACxBd,EAAgB,CAAEH,MAAOA,IACzBc,EAAEE,OAAOhB,MAAMiB,MAAQ,EACxB,CAckCJ,CAASC,EAAb,EAA3B,WACE,kBAAOI,KAAK,OAAOC,YAAY,eAAeC,KAAK,WACnD,0CAEDzB,GAAa,GACbE,GAAS,GACTb,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C","sources":["components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies &&\n          movies.map(({ id, original_title: title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport { MoviesList };\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'utils/fetchApi/fetchApi';\nconst MoviesPage = () => {\n  const [isloading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState(null);\n\n  const [query, setQuery] = useState('');\n  const [setSeacrhParams] = useSearchParams({});\n  const onSubmit = e => {\n    e.preventDefault();\n    setQuery(e.target.query.value);\n    setSeacrhParams({ query: query });\n    e.target.query.value = '';\n  };\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    setSeacrhParams({ query: query });\n    fetchMoviesByQuery(query)\n      .then(resp => setMovies(resp.data.results))\n      .catch(setError)\n      .finally(() => setIsloading(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n  return (\n    <>\n      <form action=\"\" onSubmit={e => onSubmit(e)}>\n        <input type=\"text\" placeholder=\"Search movie\" name=\"query\" />\n        <button>Search</button>\n      </form>\n      {isloading && ''}\n      {error && ''}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","original_title","to","state","from","useState","isloading","setIsloading","error","setError","setMovies","query","setQuery","useSearchParams","setSeacrhParams","useEffect","fetchMoviesByQuery","then","resp","data","results","catch","finally","action","onSubmit","e","preventDefault","target","value","type","placeholder","name"],"sourceRoot":""}